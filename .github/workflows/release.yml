# This workflow will build a curity-sdk-commons with Maven

name: Build & Release

on:
  workflow_dispatch:

jobs:
  build_and_package:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Download code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew test


  make_release:
    runs-on: ubuntu-latest
    needs: build_and_package
    permissions: write-all

    steps:
      - name: Download code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Conventional changelog action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-on-empty: "true"
          skip-commit: "true"
          tag-prefix: ''
          output-file: false
          skip-version-file: "true"
          skip-git-pull: "true"
          fallback-version: "0.1.0"

      - name: Fetch new version
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: |
          NEW_VERSION=${{ steps.changelog.outputs.version }}
          echo "Creating new version: $NEW_VERSION"
          echo NEW_VERSION=$NEW_VERSION >> $GITHUB_ENV

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: ${{ env.NEW_VERSION }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          draft: false
          prerelease: false

      - name: Create release jars
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: ./gradlew createRelease -PreleaseVersion=${{ env.NEW_VERSION }}

      - name: Build plugin artifacts zip
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: |
          zip --junk-paths plugin-artifacts build/release/*

      - name: Upload release asset
        id: upload-release-asset
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./plugin-artifacts.zip
          asset_name: plugin-artifacts.zip
          asset_content_type: application/zip
